---
formatter: markdown table

header-from: main.tf
content: |-
    # ‚òÅÔ∏è ECS Task definition module.
    ## Description
    {{ .Header }}
    This module creates an ECS task definition with the specified name.
    * üöÄ **ECS task definition**: ECS task definition with the specified name.
    * üöÄ **ECS task definition revision**: ECS task definition revision with the specified name.

    This module pretends to be used as a safer way to create ECS task definitions, by using the `terraform` way to create them, and parsing the resulting object as a valid .json
    that can be used in an ECS service.
    The ecs task definitions that can be created, can also manage two particular attributes that are usually configured outside of
    terraform, these are:
    * `containerDefinitions` : This attributes list particular settings of the container that will be created, such as the image, the port mappings, the environment variables, etc.
    For more information, please refer to the [AWS documentation](https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_ContainerDefinition.html).
    if the option `manage_task_outside_of_terraform` is set in the input variable `var.task_config`, then the container definitions will be managed outside of terraform,
    and the module will only create the task definition, but ignore any further changes to the container definitions.

    ---
    ## Example
    Examples of this module's usage are available in the [examples](./examples) folder.

    ```hcl
    {{ include "../../examples/ecs-task/basic/main.tf" }}
    ```

    For module composition, It's recommended to take a look at the module's `outputs` to understand what's available:
    ```hcl
    {{ include "outputs.tf" }}
    ```
    ---

    ## Module's documentation
    (This documentation is auto-generated using [terraform-docs](https://terraform-docs.io))
    {{ .Providers }}

    {{ .Modules }}

    {{ .Resources }}

    {{ .Requirements }}

    {{ .Inputs }}

    {{ .Outputs }}

output:
    file: README.md
    mode: inject
    template: |-
        <!-- BEGIN_TF_DOCS -->
        {{ .Content }}
        <!-- END_TF_DOCS -->
settings:
    anchor: true
    color: true
